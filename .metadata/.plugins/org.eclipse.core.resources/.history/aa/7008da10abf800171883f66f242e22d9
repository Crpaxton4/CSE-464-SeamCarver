import java.awt.image.BufferedImage;
import java.util.Random;

public class SeamCarver {

	float[] dual_gradient_energy(ImageData img){
		// TODO
		/*
		 * The Gradient for the point (x, y) is calculated by
		 * adding the square of the x gradient of the point (x, y) 
		 * and the square of the y gradient of the point (x, y):
		 * 
		 * energy(x, y) = Δx2(x, y) + Δy2(x, y)
		 * 
		 * The x gradient of the point is defined as 
		 * Δx^2(x, y) = Rx(x, y)^2 + Gx(x, y)^2 + bx(x, y)^2
		 * 
		 * 		Where Rx(x, y), Gx(x, y), Bx(x, y) are the absolute differences in the color channels of points (x+1, y) and (x-1, y)
		 * The y gradient of the point is defined as 
		 * Δy^2(x, y) = Ry(x, y)^2 + Gy(x, y)^2 + By(x, y)^2
		 * 
		 * 		Where Ry(x, y), Gy(x, y), By(x, y) are the absolute differences in the color channels of points (x+1, y) and (x-1, y)
		 * 
		 */
		
		
		return null;
	}
	
	int[] find_seam(ImageData img){
		//TODO
		
		return null;
	}
	
	static void plot_seam(ImageData img, int[] seam){
		int x = img.getWidth()/2;
		int y = 0;
		Random rand = new Random();
		for(int j = 0; j<img.getHeight(); j++){
			y++;
			
			//TODO: Burner line; This is where the 
			x += rand.nextBoolean() ? -1: 1;
			
			img.setPixel(x, y, Pixel.getIntColor(1.0f, 0.0f, 0.0f));
		}
	
	}
	
	void remove_seam(ImageData img,  int[] seam){
		//TODO
		
	}
	
	
	public static void main(String[] args) {
		ImageData s =  new ImageData("Test.jpg");
		int[] a = new int[2];
		plot_seam(s,a);
	
		new ImageDisplay(s.img);
		
		
		s.TransPose();
		
		plot_seam(s,a);
		
		new ImageDisplay(s.img);
		
		}
}